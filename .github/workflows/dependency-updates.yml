name: Dependency Updates

on:
  schedule:
    # Check for updates every Monday at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  check-updates:
    name: Check Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for outdated packages
        id: outdated
        run: |
          echo "Checking for outdated npm packages..."
          npm outdated --json > outdated.json || echo "{}" > outdated.json
          
          outdated_count=$(cat outdated.json | jq 'length' || echo "0")
          echo "count=$outdated_count" >> $GITHUB_OUTPUT
          
          if [ "$outdated_count" -gt 0 ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "## Outdated Dependencies Found" >> $GITHUB_STEP_SUMMARY
            cat outdated.json | jq '.' >> $GITHUB_STEP_SUMMARY
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "All dependencies are up to date!" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Run npm audit
        run: |
          echo "Running security audit..."
          npm audit --json > audit.json || echo "{}" > audit.json
          npm audit --audit-level=moderate || true
      
      - name: Test with updated dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "Testing with potential updates..."
          # In a real scenario, you would update package.json and test
          npm test || echo "Tests not configured"
          continue-on-error: true
      
      - name: Create update report
        run: |
          echo "## Dependency Update Report" >> $GITHUB_STEP_SUMMARY
          echo "- Outdated packages: ${{ steps.outdated.outputs.count }}" >> $GITHUB_STEP_SUMMARY
          echo "- Report generated: $(date)" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload update reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports-${{ github.run_number }}
          path: |
            outdated.json
            audit.json
          retention-days: 7
  
  create-pr:
    name: Create Update PR
    needs: check-updates
    if: needs.check-updates.outputs.has_updates == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create branch for updates
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b dependency-updates-$(date +%Y%m%d)
      
      - name: Update dependencies
        run: |
          # This would typically use tools like npm-check-updates
          echo "Updating dependencies..."
          # npx npm-check-updates -u
          # npm install
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          title: "chore: Update dependencies"
          body: |
            ## Dependency Updates
            
            This PR was automatically created by the dependency-updates workflow.
            
            Please review the changes and test before merging.
          branch: dependency-updates-$(date +%Y%m%d)
          commit-message: "chore: update dependencies"

