name: Custom Release Notes Generator

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to generate notes for'
        required: true
        default: 'latest'

jobs:
  generate-release-notes:
    name: Generate Release Notes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get previous tag
        id: previous_tag
        run: |
          if [ "${{ github.event.release.tag_name }}" != "" ]; then
            CURRENT_TAG="${{ github.event.release.tag_name }}"
          else
            CURRENT_TAG="${{ github.event.inputs.tag }}"
          fi
          
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          
          echo "Current tag: $CURRENT_TAG"
          echo "Previous tag: $PREVIOUS_TAG"
      
      - name: Fetch commits since last release
        id: commits
        run: |
          if [ "${{ steps.previous_tag.outputs.previous_tag }}" != "" ]; then
            COMMITS=$(git log ${{ steps.previous_tag.outputs.previous_tag }}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges -20)
          fi
          
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Generate release notes
        id: release_notes
        run: |
          cat > RELEASE_NOTES.md << EOF
          # Release Notes - ${{ steps.previous_tag.outputs.current_tag }}
          
          **Release Date:** $(date +"%Y-%m-%d")
          **Tag:** ${{ steps.previous_tag.outputs.current_tag }}
          
          ## Changes Since Last Release
          
          ${{ steps.commits.outputs.commits }}
          
          ## Summary
          
          This release includes improvements and bug fixes. Please review the changes below.
          
          ---
          
          *Generated automatically by GitHub Actions*
          EOF
          
          cat RELEASE_NOTES.md
      
      - name: Extract PR numbers
        run: |
          # Extract PR numbers from commit messages
          grep -oE "#[0-9]+" RELEASE_NOTES.md > pr_numbers.txt || echo "" > pr_numbers.txt
          cat pr_numbers.txt
      
      - name: Generate markdown summary
        run: |
          echo "## Release Notes Generated" >> $GITHUB_STEP_SUMMARY
          echo "- Tag: ${{ steps.previous_tag.outputs.current_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- Previous Tag: ${{ steps.previous_tag.outputs.previous_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commits: $(echo '${{ steps.commits.outputs.commits }}' | wc -l)" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes-${{ steps.previous_tag.outputs.current_tag }}
          path: |
            RELEASE_NOTES.md
            pr_numbers.txt
          retention-days: 90
      
      - name: Commit release notes
        if: github.event_name == 'release'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add RELEASE_NOTES.md
          git commit -m "docs: add release notes for ${{ steps.previous_tag.outputs.current_tag }}" || echo "No changes to commit"
          git push origin main || echo "Nothing to push"
      
      - name: Comment on release
        if: github.event_name == 'release'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const notes = fs.readFileSync('RELEASE_NOTES.md', 'utf8');
            
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: notes
            });

