name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Check for package.json
        id: check_package
        run: |
          if [ -f "package.json" ]; then
            echo "has_package=true" >> $GITHUB_OUTPUT
          else
            echo "has_package=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Install dependencies
        if: steps.check_package.outputs.has_package == 'true'
        run: |
          if [ -f "package-lock.json" ] || [ -f "npm-shrinkwrap.json" ] || [ -f "yarn.lock" ]; then
            npm ci
          else
            npm install
          fi
        continue-on-error: true
      
      - name: Run linter
        if: steps.check_package.outputs.has_package == 'true'
        run: npm run lint || echo "Linting not configured"
        continue-on-error: true
      
      - name: Run tests
        if: steps.check_package.outputs.has_package == 'true'
        run: npm test || echo "Tests not configured"
        continue-on-error: true
      
      - name: Build project
        if: steps.check_package.outputs.has_package == 'true'
        run: npm run build || echo "Build script not configured"
        continue-on-error: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            test-results/
            coverage/
          if-no-files-found: ignore
      
      - name: Generate test report
        if: always()
        run: |
          echo "## Test Results for Node.js ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Linter: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

